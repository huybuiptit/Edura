rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Quiz collection rules
    match /quizzes/{quizId} {
      // Allow read if authenticated
      allow read: if isAuthenticated();
      
      // Allow create if authenticated and user is the creator
      allow create: if isAuthenticated() 
                    && request.resource.data.createdBy == request.auth.uid;
      
      // Allow update if authenticated and user is the owner
      allow update: if isAuthenticated() 
                    && resource.data.createdBy == request.auth.uid;
      
      // Allow delete if authenticated and user is the owner
      allow delete: if isAuthenticated() 
                    && resource.data.createdBy == request.auth.uid;
    }
    
    // Test Results collection rules
    match /test_results/{resultId} {
      // Allow read if authenticated and user is the owner
      allow read: if isAuthenticated() 
                  && resource.data.userId == request.auth.uid;
      
      // Allow create if authenticated and user is the owner
      allow create: if isAuthenticated() 
                    && request.resource.data.userId == request.auth.uid;
      
      // Allow update if authenticated and user is the owner
      allow update: if isAuthenticated() 
                    && resource.data.userId == request.auth.uid;
      
      // Allow delete if authenticated and user is the owner
      allow delete: if isAuthenticated() 
                    && resource.data.userId == request.auth.uid;
    }
    
    // Default rule: deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}


